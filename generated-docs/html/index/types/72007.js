// This file was generated by docs-search
window.DocsSearchTypeIndex["72007"] = {"tag":"Just","value":[{"comments":"Converts a `Json` value to a JSON string. To retrieve a string from a `Json`\nstring value, see `fromString`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.Argonaut.Core","name":"stringify","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":43,"line":241},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":241}}},{"comments":"Constructs a `Json` array value containing only the provided value\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Core","name":"jsonSingletonArray","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":35,"line":232},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":232}}},{"comments":"Construct the `Json` representation of a `String` value.\nNote that this function only produces `Json` containing a single piece of `String`\ndata (similar to `fromBoolean`, `fromNumber`, etc.).\nThis function does NOT convert the `String` encoding of a JSON value to `Json` - For that\npurpose, you'll need to use `jsonParser`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Core","name":"fromString","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":44,"line":194},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":194}}},{"comments":"Construct `Json` from a `Number` value\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Core","name":"fromNumber","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":44,"line":187},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":187}}},{"comments":"Construct `Json` from a `Boolean` value\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Core","name":"fromBoolean","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":46,"line":184},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":184}}},{"comments":"Check if the provided `Json` is an `Object`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Core","name":"isObject","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":28,"line":144},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":144}}},{"comments":"Check if the provided `Json` is an `Array`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Core","name":"isArray","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":27,"line":140},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":140}}},{"comments":"Check if the provided `Json` is a `String`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Core","name":"isString","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":28,"line":136},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":136}}},{"comments":"Check if the provided `Json` is a `Number`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Core","name":"isNumber","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":28,"line":132},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":132}}},{"comments":"Check if the provided `Json` is a `Boolean`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Core","name":"isBoolean","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":29,"line":128},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":128}}},{"comments":"Check if the provided `Json` is the `null` value\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Core","name":"isNull","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":26,"line":124},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":124}}},{"comments":"Prints a `JsonDecodeError` as a readable error message.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.Argonaut.Decode.Error","name":"printJsonDecodeError","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":50,"line":33},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Decode/Error.purs","start":{"column":1,"line":33}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeVoid","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":27,"line":100},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":100}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeChar","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":27,"line":80},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":80}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNonEmptyString","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":47,"line":65},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":65}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeCodePoint","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":37,"line":62},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":62}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeString","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":31,"line":59},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":59}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeInt","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":25,"line":56},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":56}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNumber","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":31,"line":53},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":53}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeBoolean","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":33,"line":50},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":50}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeUnit","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":27,"line":47},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":47}}},{"comments":"Returns the numeric Unicode value of the character.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.Char","name":"toCharCode","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":26,"line":11},"name":".spago/p/strings-6.0.1/src/Data/Char.purs","start":{"column":1,"line":11}}},{"comments":"A function of one argument\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"b"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}},"moduleName":"Data.Function.Uncurried","name":"Fn1","packageInfo":{"tag":"package","value":"functions-6.0.0"},"score":0,"sourceSpan":{"end":{"column":22,"line":11},"name":".spago/p/functions-6.0.0/src/Data/Function/Uncurried.purs","start":{"column":1,"line":11}}},{"comments":"The negation of `even`.\n\n``` purescript\nodd 0 == false\nodd 1 == true\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Int","name":"odd","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":22,"line":170},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":170}}},{"comments":"Returns whether an `Int` is an even number.\n\n``` purescript\neven 0 == true\neven 1 == false\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Int","name":"even","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":23,"line":161},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":161}}},{"comments":"Returns whether an `Int` is `Even` or `Odd`.\n\n``` purescript\nparity 0 == Even\nparity 1 == Odd\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Parity"]}]}},"moduleName":"Data.Int","name":"parity","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":24,"line":152},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":152}}},{"comments":"Converts an `Int` value back into a `Number`. Any `Int` is a valid `Number`\nso there is no loss of precision with this function.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Int","name":"toNumber","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":41,"line":81},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":81}}},{"comments":"Convert a `Number` to an `Int`, by taking the nearest integer to the\nargument. Values outside the `Int` range are clamped, `NaN` and `Infinity`\nvalues return 0.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.Int","name":"round","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":23,"line":67},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":67}}},{"comments":"Convert a `Number` to an `Int`, by dropping the decimal.\nValues outside the `Int` range are clamped, `NaN` and `Infinity`\nvalues return 0.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.Int","name":"trunc","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":23,"line":61},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":61}}},{"comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\nless than the argument. Values outside the `Int` range are clamped, `NaN`\nand `Infinity` values return 0.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.Int","name":"floor","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":23,"line":49},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":49}}},{"comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\ngreater than the argument. Values outside the `Int` range are clamped,\n`NaN` and `Infinity` values return 0.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.Int","name":"ceil","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":22,"line":55},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":55}}},{"comments":"Bitwise NOT.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.Int.Bits","name":"complement","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":40,"line":37},"name":".spago/p/integers-6.0.0/src/Data/Int/Bits.purs","start":{"column":1,"line":37}}},{"comments":"Truncates the decimal portion of a number. Equivalent to `floor` if the\nnumber is positive, and `ceil` if the number is negative.\n```purs\nceil 1.5\n2.0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"trunc","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":41,"line":264},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":264}}},{"comments":"Returns the tangent of the argument, where the argument is in radians.\n```\n> tan (pi / 4.0)\n0.9999999999999999\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"tan","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":256},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":256}}},{"comments":"Returns the square root of the argument.\n```purs\n> sqrt 49.0\n7.0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"sqrt","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":40,"line":249},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":249}}},{"comments":"Returns the sine of the argument, where the argument is in radians.\n```purs\n> sin (pi / 2.0)\n1.0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"sin","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":242},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":242}}},{"comments":"Returns either a positive or negative +/- 1, indicating the sign of the\nargument. If the argument is 0, it will return a +/- 0. If the argument is\nNaN it will return NaN.\n```purs\n> x = -42.0\n> sign x * abs x == x\ntrue\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"sign","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":40,"line":235},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":235}}},{"comments":"Returns the integer closest to the argument.\n```purs\n> round 1.5\n2.0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"round","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":41,"line":225},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":225}}},{"comments":"Returns the natural logarithm of a number.\n```purs\n> log e\n1.0\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"log","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":191},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":191}}},{"comments":"Returns the largest integer not larger than the argument.\n```purs\n> floor 1.5\n1.0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"floor","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":41,"line":185},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":185}}},{"comments":"Returns `e` exponentiated to the power of the argument.\n```purs\n> exp 1.0\n2.718281828459045\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"exp","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":178},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":178}}},{"comments":"Returns the cosine of the argument, where the argument is in radians.\n```purs\n> cos (pi / 4.0) == sqrt2 / 2.0\ntrue\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"cos","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":171},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":171}}},{"comments":"Returns the smallest integer not smaller than the argument.\n```purs\n> ceil 1.5\n2.0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"ceil","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":40,"line":164},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":164}}},{"comments":"Returns the inverse tangent in radians of the argument.\n```purs\n> atan 1.0 == pi / 4.0\ntrue\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"atan","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":40,"line":144},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":144}}},{"comments":"Returns the inverse sine in radians of the argument.\n```purs\n> asin 1.0 == pi / 2.0\ntrue\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"asin","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":40,"line":137},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":137}}},{"comments":"Returns the inverse cosine in radians of the argument.\n```purs\n> acos 0.0 == pi / 2.0\ntrue\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"acos","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":40,"line":130},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":130}}},{"comments":"Returns the absolute value of the argument.\n```purs\n> x = -42.0\n> sign x * abs x == x\ntrue\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"abs","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":123},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":123}}},{"comments":"Test whether a number is finite.\n```purs\n> isFinite 0.0\ntrue\n\n> isFinite infinity\nfalse\n\n> isFinite (-infinity)\nfalse\n\n> isFinite nan\nfalse\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Number","name":"isFinite","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":45,"line":83},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":83}}},{"comments":"Test whether a number is NaN.\n```purs\n> isNaN 0.0\nfalse\n\n> isNaN nan\ntrue\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Number","name":"isNaN","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":42,"line":57},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":57}}},{"comments":"Convert a number to a string via JavaScript's toString method.\n\n```purs\n> toString 12.34\n\"12.34\"\n\n> toString 1234.0\n\"1234\"\n\n> toString 1.2e-10\n\"1.2e-10\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.Number.Format","name":"toString","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":44,"line":76},"name":".spago/p/numbers-9.0.1/src/Data/Number/Format.purs","start":{"column":1,"line":76}}},{"comments":"Create a `toExponential`-based format from an integer. Values smaller than\n`0` and larger than `20` will be clamped.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Number","Format"],"Format"]}]}},"moduleName":"Data.Number.Format","name":"exponential","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":29,"line":55},"name":".spago/p/numbers-9.0.1/src/Data/Number/Format.purs","start":{"column":1,"line":55}}},{"comments":"Create a `toFixed`-based format from an integer. Values smaller than `0`\nand larger than `20` will be clamped.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Number","Format"],"Format"]}]}},"moduleName":"Data.Number.Format","name":"fixed","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":23,"line":50},"name":".spago/p/numbers-9.0.1/src/Data/Number/Format.purs","start":{"column":1,"line":50}}},{"comments":"Create a `toPrecision`-based format from an integer. Values smaller than\n`1` and larger than `21` will be clamped.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Number","Format"],"Format"]}]}},"moduleName":"Data.Number.Format","name":"precision","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":27,"line":45},"name":".spago/p/numbers-9.0.1/src/Data/Number/Format.purs","start":{"column":1,"line":45}}},{"comments":"Reverses an `Ordering` value, flipping greater than for less than while\npreserving equality.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]}},"moduleName":"Data.Ordering","name":"invert","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":31,"line":33},"name":".spago/p/prelude-6.0.1/src/Data/Ordering.purs","start":{"column":1,"line":33}}},{"comments":"Returns the number of code points in the string. Operates in constant\nspace and in time linear to the length of the string.\n\n```purescript\n>>> length \"b 𝐀𝐀 c 𝐀\"\n8\n-- compare to Data.String:\n>>> length \"b 𝐀𝐀 c 𝐀\"\n11\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.String.CodePoints","name":"length","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":24,"line":215},"name":".spago/p/strings-6.0.1/src/Data/String/CodePoints.purs","start":{"column":1,"line":215}}},{"comments":"Creates a string containing just the given code point. Operates in\nconstant space and time.\n\n```purescript\n>>> map singleton (toEnum 0x1D400)\nJust \"𝐀\"\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.CodePoints","name":"singleton","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":33,"line":88},"name":".spago/p/strings-6.0.1/src/Data/String/CodePoints.purs","start":{"column":1,"line":88}}},{"comments":"Creates a `CodePoint` from a given `Char`.\n\n```purescript\n>>> codePointFromChar 'B'\nCodePoint 0x42 -- represents 'B'\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","CodePoints"],"CodePoint"]}]}},"moduleName":"Data.String.CodePoints","name":"codePointFromChar","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":77},"name":".spago/p/strings-6.0.1/src/Data/String/CodePoints.purs","start":{"column":1,"line":77}}},{"comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength \"Hello World\" == 11\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.String.CodeUnits","name":"length","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":150},"name":".spago/p/strings-6.0.1/src/Data/String/CodeUnits.purs","start":{"column":1,"line":150}}},{"comments":"Returns a string of length `1` containing the given character.\n\n```purescript\nsingleton 'l' == \"l\"\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.CodeUnits","name":"singleton","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":43,"line":83},"name":".spago/p/strings-6.0.1/src/Data/String/CodeUnits.purs","start":{"column":1,"line":83}}},{"comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n\n```purescript\ntrim \"   Hello  \\n World\\n\\t    \" == \"Hello  \\n World\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.Common","name":"trim","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":40,"line":88},"name":".spago/p/strings-6.0.1/src/Data/String/Common.purs","start":{"column":1,"line":88}}},{"comments":"Returns the argument converted to uppercase.\n\n```purescript\ntoUpper \"Hello\" == \"HELLO\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.Common","name":"toUpper","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":43,"line":79},"name":".spago/p/strings-6.0.1/src/Data/String/Common.purs","start":{"column":1,"line":79}}},{"comments":"Returns the argument converted to lowercase.\n\n```purescript\ntoLower \"hElLo\" == \"hello\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.Common","name":"toLower","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":43,"line":72},"name":".spago/p/strings-6.0.1/src/Data/String/Common.purs","start":{"column":1,"line":72}}},{"comments":"Returns `true` if the given string is empty.\n\n```purescript\nnull \"\" == true\nnull \"Hi\" == false\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.String.Common","name":"null","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":26,"line":23},"name":".spago/p/strings-6.0.1/src/Data/String/Common.purs","start":{"column":1,"line":23}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.String.NonEmpty.CodePoints","name":"length","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":32,"line":102},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/CodePoints.purs","start":{"column":1,"line":102}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}},"moduleName":"Data.String.NonEmpty.CodePoints","name":"singleton","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":41,"line":60},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/CodePoints.purs","start":{"column":1,"line":60}}},{"comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength (NonEmptyString \"Hello World\") == 11\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.String.NonEmpty.CodeUnits","name":"length","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":32,"line":201},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/CodeUnits.purs","start":{"column":1,"line":201}}},{"comments":"Creates a `NonEmptyString` from a character.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}},"moduleName":"Data.String.NonEmpty.CodeUnits","name":"singleton","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":36,"line":70},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/CodeUnits.purs","start":{"column":1,"line":70}}},{"comments":"Returns the argument converted to uppercase.\n\n```purescript\ntoUpper (NonEmptyString \"Hello\") == NonEmptyString \"HELLO\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}},"moduleName":"Data.String.NonEmpty.Internal","name":"toUpper","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":44,"line":178},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/Internal.purs","start":{"column":1,"line":178}}},{"comments":"Returns the argument converted to lowercase.\n\n```purescript\ntoLower (NonEmptyString \"hElLo\") == NonEmptyString \"hello\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}},"moduleName":"Data.String.NonEmpty.Internal","name":"toLower","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":44,"line":170},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/Internal.purs","start":{"column":1,"line":170}}},{"comments":"Converts a `NonEmptyString` back into a standard `String`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.NonEmpty.Internal","name":"toString","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":37,"line":80},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/Internal.purs","start":{"column":1,"line":80}}},{"comments":"A partial version of `fromString`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[],"constraintClass":[["Prim"],"Partial"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}},"moduleName":"Data.String.NonEmpty.Internal","name":"unsafeFromString","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":56,"line":76},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/Internal.purs","start":{"column":1,"line":76}}},{"comments":"Parses the string representation of `RegexFlags`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}},"moduleName":"Data.String.Regex","name":"parseFlags","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":35,"line":69},"name":".spago/p/strings-6.0.1/src/Data/String/Regex.purs","start":{"column":1,"line":69}}},{"comments":"Returns the string representation of the given `RegexFlags`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.Regex","name":"renderFlags","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":36,"line":59},"name":".spago/p/strings-6.0.1/src/Data/String/Regex.purs","start":{"column":1,"line":59}}},{"comments":"Returns the `RegexFlags` used to construct the given `Regex`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}},"moduleName":"Data.String.Regex","name":"flags","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":29,"line":52},"name":".spago/p/strings-6.0.1/src/Data/String/Regex.purs","start":{"column":1,"line":52}}},{"comments":"Returns the pattern string used to construct the given `Regex`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.Regex","name":"source","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":41,"line":49},"name":".spago/p/strings-6.0.1/src/Data/String/Regex.purs","start":{"column":1,"line":49}}},{"comments":"Converts a string of length `1` to a character.\n\n**Unsafe:** throws runtime exception if length is not `1`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]}},"moduleName":"Data.String.Unsafe","name":"char","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":38,"line":15},"name":".spago/p/strings-6.0.1/src/Data/String/Unsafe.purs","start":{"column":1,"line":15}}}]}