// This file was generated by docs-search.
window.DocsSearchIndex["19"] = [["t5",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple","Nested"],"T4"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}]}}},"moduleName":"Data.Tuple.Nested","name":"T5","packageInfo":{"tag":"package","value":"tuples-7.0.0"},"score":0,"sourceSpan":{"end":{"column":41,"line":88},"name":".spago/p/tuples-7.0.0/src/Data/Tuple/Nested.purs","start":{"column":1,"line":88}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product","Nested"],"T4"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}]}}},"moduleName":"Data.Functor.Product.Nested","name":"T5","packageInfo":{"tag":"package","value":"functors-5.0.0"},"score":0,"sourceSpan":{"end":{"column":43,"line":37},"name":".spago/p/functors-5.0.0/src/Data/Functor/Product/Nested.purs","start":{"column":1,"line":37}}}]],["shift",[{"comments":"Remove the first element from an array and return that element.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"h","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Array.ST","name":"shift","packageInfo":{"tag":"package","value":"arrays-7.3.0"},"score":0,"sourceSpan":{"end":{"column":51,"line":114},"name":".spago/p/arrays-7.3.0/src/Data/Array/ST.purs","start":{"column":1,"line":114}}}]],["shl",[{"comments":"Bitwise shift left.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}},"moduleName":"Data.Int.Bits","name":"shl","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":40,"line":28},"name":".spago/p/integers-6.0.0/src/Data/Int/Bits.purs","start":{"column":1,"line":28}}}]],["show",[{"comments":"The `Show` type class represents those types which can be converted into\na human-readable `String` representation.\n\nWhile not required, it is recommended that for any expression `x`, the\nstring `show x` be executable PureScript code which evaluates to the same\nvalue as the expression `x`.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"a"}],"fundeps":[],"superclasses":[]}},"moduleName":"Data.Show","name":"Show","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":22,"line":24},"name":".spago/p/prelude-6.0.1/src/Data/Show.purs","start":{"column":1,"line":23}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]},"skolem":null}},"typeClass":[["Data","Show"],"Show"],"typeClassArguments":[{"name":"a"}]}},"moduleName":"Data.Show","name":"show","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":22,"line":24},"name":".spago/p/prelude-6.0.1/src/Data/Show.purs","start":{"column":3,"line":24}}}]],["showrecordfields",[{"comments":"A class for records where all fields have `Show` instances, used to\nimplement the `Show` instance for records.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"rowlist"},{"name":"row"}],"fundeps":[],"superclasses":[]}},"moduleName":"Data.Show","name":"ShowRecordFields","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":60,"line":66},"name":".spago/p/prelude-6.0.1/src/Data/Show.purs","start":{"column":1,"line":65}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"rowlist","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"row","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"rowlist"},{"tag":"TypeVar","annotation":null,"contents":"row"}],"constraintClass":[["Data","Show"],"ShowRecordFields"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"rowlist"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"row"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}]},"skolem":null}},"skolem":null}},"typeClass":[["Data","Show"],"ShowRecordFields"],"typeClassArguments":[{"name":"rowlist"},{"name":"row"}]}},"moduleName":"Data.Show","name":"showRecordFields","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":60,"line":66},"name":".spago/p/prelude-6.0.1/src/Data/Show.purs","start":{"column":3,"line":66}}}]],["showtree",[{"comments":"Render a `Map` as a `String`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"v"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"showTree","packageInfo":{"tag":"package","value":"ordered-collections-3.2.0"},"score":0,"sourceSpan":{"end":{"column":62,"line":230},"name":".spago/p/ordered-collections-3.2.0/src/Data/Map/Internal.purs","start":{"column":1,"line":230}}}]],["shr",[{"comments":"Bitwise shift right.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}},"moduleName":"Data.Int.Bits","name":"shr","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":40,"line":31},"name":".spago/p/integers-6.0.0/src/Data/Int/Bits.purs","start":{"column":1,"line":31}}}]],["right",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Profunctor","Choice"],"Choice"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Profunctor","Choice"],"Choice"],"typeClassArguments":[{"name":"p"}]}},"moduleName":"Data.Profunctor.Choice","name":"right","packageInfo":{"tag":"package","value":"profunctor-6.0.1"},"score":0,"sourceSpan":{"end":{"column":62,"line":30},"name":".spago/p/profunctor-6.0.1/src/Data/Profunctor/Choice.purs","start":{"column":3,"line":30}}},{"comments":"Right injection\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"g","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"g"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Functor.Coproduct","name":"right","packageInfo":{"tag":"package","value":"functors-5.0.0"},"score":0,"sourceSpan":{"end":{"column":46,"line":22},"name":".spago/p/functors-5.0.0/src/Data/Functor/Coproduct.purs","start":{"column":1,"line":22}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}},"moduleName":"Data.Either","name":"Right","packageInfo":{"tag":"package","value":"either-6.1.0"},"score":0,"sourceSpan":{"end":{"column":33,"line":17},"name":".spago/p/either-6.1.0/src/Data/Either.purs","start":{"column":26,"line":17}}}]],["rightdiv",[{"comments":"Right division, defined as `rightDiv a b = a * recip b`. Left and right\ndivision are distinct in this module because a `DivisionRing` is not\nnecessarily commutative.\n\nIf the type `a` is also a `EuclideanRing`, then this function is\nequivalent to `div` from the `EuclideanRing` class. When working\nabstractly, `div` should generally be preferred, unless you know that you\nneed your code to work with noncommutative rings.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","DivisionRing"],"DivisionRing"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}}},"moduleName":"Data.DivisionRing","name":"rightDiv","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":52,"line":51},"name":".spago/p/prelude-6.0.1/src/Data/DivisionRing.purs","start":{"column":1,"line":51}}}]],["ring",[{"comments":"The `Ring` class is for types that support addition, multiplication,\nand subtraction operations.\n\nInstances must satisfy the following laws in addition to the `Semiring`\nlaws:\n\n- Additive inverse: `a - a = zero`\n- Compatibility of `sub` and `negate`: `a - b = a + (zero - b)`\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"a"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Semiring"],"Semiring"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Ring","name":"Ring","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":21,"line":28},"name":".spago/p/prelude-6.0.1/src/Data/Ring.purs","start":{"column":1,"line":27}}}]],["ringrecord",[{"comments":"A class for records where all fields have `Ring` instances, used to\nimplement the `Ring` instance for records.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"rowlist"},{"name":"row"},{"name":"subrow"}],"fundeps":[[["rowlist"],["subrow"]]],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"rowlist"},{"tag":"TypeVar","annotation":null,"contents":"row"},{"tag":"TypeVar","annotation":null,"contents":"subrow"}],"constraintClass":[["Data","Semiring"],"SemiringRecord"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Ring","name":"RingRecord","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":74,"line":61},"name":".spago/p/prelude-6.0.1/src/Data/Ring.purs","start":{"column":1,"line":60}}}]],["localecompare",[{"comments":"Compare two strings in a locale-aware fashion. This is in contrast to\nthe `Ord` instance on `String` which treats strings as arrays of code\nunits:\n\n```purescript\nNonEmptyString \"ä\" `localeCompare` NonEmptyString \"b\" == LT\nNonEmptyString \"ä\" `compare` NonEmptyString \"b\" == GT\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]}]}},"moduleName":"Data.String.NonEmpty.Internal","name":"localeCompare","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":62,"line":144},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/Internal.purs","start":{"column":1,"line":144}}},{"comments":"Compare two strings in a locale-aware fashion. This is in contrast to\nthe `Ord` instance on `String` which treats strings as arrays of code\nunits:\n\n```purescript\n\"ä\" `localeCompare` \"b\" == LT\n\"ä\" `compare` \"b\" == GT\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]}]}},"moduleName":"Data.String.Common","name":"localeCompare","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":46,"line":34},"name":".spago/p/strings-6.0.1/src/Data/String/Common.purs","start":{"column":1,"line":34}}}]],["log",[{"comments":"Write a message to the console.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}},"moduleName":"Effect.Console","name":"log","packageInfo":{"tag":"package","value":"console-6.1.0"},"score":0,"sourceSpan":{"end":{"column":17,"line":12},"name":".spago/p/console-6.1.0/src/Effect/Console.purs","start":{"column":1,"line":10}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}}},"moduleName":"Effect.Class.Console","name":"log","packageInfo":{"tag":"package","value":"console-6.1.0"},"score":0,"sourceSpan":{"end":{"column":51,"line":10},"name":".spago/p/console-6.1.0/src/Effect/Class/Console.purs","start":{"column":1,"line":10}}},{"comments":"Returns the natural logarithm of a number.\n```purs\n> log e\n1.0\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"log","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":39,"line":191},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":191}}}]],["log10e",[{"comments":"Base 10 logarithm of `e`.\n```purs\n> 1.0 / ln10 - log10e\n-5.551115123125783e-17\n\n> log10e\n0.4342944819032518\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"log10e","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":17,"line":310},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":310}}}]],["log2e",[{"comments":"The base 2 logarithm of `e`.\n```purs\n> 1.0 / ln2 == log2e\ntrue\n\n> log2e\n1.4426950408889634\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"log2e","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":16,"line":321},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":321}}}]],["logshow",[{"comments":"Write a value to the console, using its `Show` instance to produce a\n`String`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}}},"moduleName":"Effect.Console","name":"logShow","packageInfo":{"tag":"package","value":"console-6.1.0"},"score":0,"sourceSpan":{"end":{"column":48,"line":16},"name":".spago/p/console-6.1.0/src/Effect/Console.purs","start":{"column":1,"line":16}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Effect.Class.Console","name":"logShow","packageInfo":{"tag":"package","value":"console-6.1.0"},"score":0,"sourceSpan":{"end":{"column":62,"line":13},"name":".spago/p/console-6.1.0/src/Effect/Class/Console.purs","start":{"column":1,"line":13}}}]],["lookup",[{"comments":"Lookup the value for a key in a map\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}}},"moduleName":"Foreign.Object","name":"lookup","packageInfo":{"tag":"package","value":"foreign-object-4.1.0"},"score":0,"sourceSpan":{"end":{"column":50,"line":188},"name":".spago/p/foreign-object-4.1.0/src/Foreign/Object.purs","start":{"column":1,"line":188}}},{"comments":"Look up a value for the specified key\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"lookup","packageInfo":{"tag":"package","value":"ordered-collections-3.2.0"},"score":0,"sourceSpan":{"end":{"column":55,"line":277},"name":".spago/p/ordered-collections-3.2.0/src/Data/Map/Internal.purs","start":{"column":1,"line":277}}},{"comments":"Lookup a value in a data structure of `Tuple`s, generalizing association lists.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Foldable","name":"lookup","packageInfo":{"tag":"package","value":"foldable-traversable-6.0.0"},"score":0,"sourceSpan":{"end":{"column":76,"line":470},"name":".spago/p/foldable-traversable-6.0.0/src/Data/Foldable.purs","start":{"column":1,"line":470}}}]],["lookupge",[{"comments":"Look up a value for the specified key, or the least one greater than it\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000k\u0000e\u0000y",{"tag":"TypeVar","annotation":null,"contents":"k"},{"tag":"RCons","annotation":null,"contents":["\u0000v\u0000a\u0000l\u0000u\u0000e",{"tag":"TypeVar","annotation":null,"contents":"v"},{"tag":"REmpty","annotation":null}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"lookupGE","packageInfo":{"tag":"package","value":"ordered-collections-3.2.0"},"score":0,"sourceSpan":{"end":{"column":80,"line":321},"name":".spago/p/ordered-collections-3.2.0/src/Data/Map/Internal.purs","start":{"column":1,"line":321}}}]],["lookupgt",[{"comments":"Look up a value for the least key greater than the specified key\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000k\u0000e\u0000y",{"tag":"TypeVar","annotation":null,"contents":"k"},{"tag":"RCons","annotation":null,"contents":["\u0000v\u0000a\u0000l\u0000u\u0000e",{"tag":"TypeVar","annotation":null,"contents":"v"},{"tag":"REmpty","annotation":null}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"lookupGT","packageInfo":{"tag":"package","value":"ordered-collections-3.2.0"},"score":0,"sourceSpan":{"end":{"column":80,"line":336},"name":".spago/p/ordered-collections-3.2.0/src/Data/Map/Internal.purs","start":{"column":1,"line":336}}}]],["lookuple",[{"comments":"Look up a value for the specified key, or the greatest one less than it\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000k\u0000e\u0000y",{"tag":"TypeVar","annotation":null,"contents":"k"},{"tag":"RCons","annotation":null,"contents":["\u0000v\u0000a\u0000l\u0000u\u0000e",{"tag":"TypeVar","annotation":null,"contents":"v"},{"tag":"REmpty","annotation":null}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"lookupLE","packageInfo":{"tag":"package","value":"ordered-collections-3.2.0"},"score":0,"sourceSpan":{"end":{"column":80,"line":289},"name":".spago/p/ordered-collections-3.2.0/src/Data/Map/Internal.purs","start":{"column":1,"line":289}}}]],["lookuplt",[{"comments":"Look up a value for the greatest key less than the specified key\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000k\u0000e\u0000y",{"tag":"TypeVar","annotation":null,"contents":"k"},{"tag":"RCons","annotation":null,"contents":["\u0000v\u0000a\u0000l\u0000u\u0000e",{"tag":"TypeVar","annotation":null,"contents":"v"},{"tag":"REmpty","annotation":null}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"lookupLT","packageInfo":{"tag":"package","value":"ordered-collections-3.2.0"},"score":0,"sourceSpan":{"end":{"column":80,"line":305},"name":".spago/p/ordered-collections-3.2.0/src/Data/Map/Internal.purs","start":{"column":1,"line":305}}}]],["loop",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Rec","Class"],"Step"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}},"moduleName":"Control.Monad.Rec.Class","name":"Loop","packageInfo":{"tag":"package","value":"tailrec-6.1.0"},"score":0,"sourceSpan":{"end":{"column":21,"line":29},"name":".spago/p/tailrec-6.1.0/src/Control/Monad/Rec/Class.purs","start":{"column":15,"line":29}}}]],["loop2",[{"comments":"A curried version of the `Loop` constructor, provided as a convenience for\nuse with `tailRec2` and `tailRecM2`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Rec","Class"],"Step"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000a",{"tag":"TypeVar","annotation":null,"contents":"a"},{"tag":"RCons","annotation":null,"contents":["\u0000b",{"tag":"TypeVar","annotation":null,"contents":"b"},{"tag":"REmpty","annotation":null}]}]}]}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.Rec.Class","name":"loop2","packageInfo":{"tag":"package","value":"tailrec-6.1.0"},"score":0,"sourceSpan":{"end":{"column":59,"line":185},"name":".spago/p/tailrec-6.1.0/src/Control/Monad/Rec/Class.purs","start":{"column":1,"line":185}}}]],["loop3",[{"comments":"A curried version of the `Loop` constructor, provided as a convenience for\nuse with `tailRec3` and `tailRecM3`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Rec","Class"],"Step"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000a",{"tag":"TypeVar","annotation":null,"contents":"a"},{"tag":"RCons","annotation":null,"contents":["\u0000b",{"tag":"TypeVar","annotation":null,"contents":"b"},{"tag":"RCons","annotation":null,"contents":["\u0000c",{"tag":"TypeVar","annotation":null,"contents":"c"},{"tag":"REmpty","annotation":null}]}]}]}]}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.Rec.Class","name":"loop3","packageInfo":{"tag":"package","value":"tailrec-6.1.0"},"score":0,"sourceSpan":{"end":{"column":74,"line":190},"name":".spago/p/tailrec-6.1.0/src/Control/Monad/Rec/Class.purs","start":{"column":1,"line":190}}}]],["lose",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Decidable"],"Decidable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}},"typeClass":[["Data","Decidable"],"Decidable"],"typeClassArguments":[{"name":"f"}]}},"moduleName":"Data.Decidable","name":"lose","packageInfo":{"tag":"package","value":"contravariant-6.0.0"},"score":0,"sourceSpan":{"end":{"column":39,"line":14},"name":".spago/p/contravariant-6.0.0/src/Data/Decidable.purs","start":{"column":3,"line":14}}}]],["lost",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Decidable"],"Decidable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]}]},"skolem":null}}},"moduleName":"Data.Decidable","name":"lost","packageInfo":{"tag":"package","value":"contravariant-6.0.0"},"score":0,"sourceSpan":{"end":{"column":40,"line":28},"name":".spago/p/contravariant-6.0.0/src/Data/Decidable.purs","start":{"column":1,"line":28}}}]],["lowersplit",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Functor","Invariant"],"Invariant"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Profunctor","Split"],"Split"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Profunctor.Split","name":"lowerSplit","packageInfo":{"tag":"package","value":"profunctor-6.0.1"},"score":0,"sourceSpan":{"end":{"column":60,"line":35},"name":".spago/p/profunctor-6.0.1/src/Data/Profunctor/Split.purs","start":{"column":1,"line":35}}}]],["gt",[{"comments":"The 'greater than' ordering type.\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim","Ordering"],"Ordering"]}},"moduleName":"Prim.Ordering","name":"GT","packageInfo":{"tag":"builtin"},"score":0},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}}},"moduleName":"Data.Ordering","name":"GT","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":24,"line":13},"name":".spago/p/prelude-6.0.1/src/Data/Ordering.purs","start":{"column":20,"line":13}}}]],["function",[{"comments":"A function, which takes values of the type specified by the first type\nparameter, and returns values of the type specified by the second.\nIn the JavaScript backend, this is a standard JavaScript Function.\n\nThe type constructor `(->)` is syntactic sugar for this type constructor.\nIt is recommended to use `(->)` rather than `Function`, where possible.\n\nThat is, prefer this:\n\n    f :: Number -> Number\n\nto either of these:\n\n    f :: Function Number Number\n    f :: (->) Number Number\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]}]}},"moduleName":"Prim","name":"Function","packageInfo":{"tag":"builtin"},"score":0}]],["functor",[{"comments":"A `Functor` is a type constructor which supports a mapping operation\n`map`.\n\n`map` can be used to turn functions `a -> b` into functions\n`f a -> f b` whose argument and return types use the type constructor `f`\nto represent some computational context.\n\nInstances must satisfy the following laws:\n\n- Identity: `map identity = identity`\n- Composition: `map (f <<< g) = map f <<< map g`\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"f"}],"fundeps":[],"superclasses":[]}},"moduleName":"Data.Functor","name":"Functor","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":44,"line":32},"name":".spago/p/prelude-6.0.1/src/Data/Functor.purs","start":{"column":1,"line":31}}}]],["functorwithindex",[{"comments":"A `Functor` with an additional index.\nInstances must satisfy a modified form of the `Functor` laws\n```purescript\nmapWithIndex (\\_ a -> a) = identity\nmapWithIndex f . mapWithIndex g = mapWithIndex (\\i -> f i <<< g i)\n```\nand be compatible with the `Functor` instance\n```purescript\nmap f = mapWithIndex (const f)\n```\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"i"},{"name":"f"}],"fundeps":[[["f"],["i"]]],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Functor"],"Functor"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.FunctorWithIndex","name":"FunctorWithIndex","packageInfo":{"tag":"package","value":"foldable-traversable-6.0.0"},"score":0,"sourceSpan":{"end":{"column":58,"line":36},"name":".spago/p/foldable-traversable-6.0.0/src/Data/FunctorWithIndex.purs","start":{"column":1,"line":35}}}]],["even",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Parity"]}}},"moduleName":"Data.Int","name":"Even","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":19,"line":112},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":13,"line":112}}},{"comments":"Returns whether an `Int` is an even number.\n\n``` purescript\neven 0 == true\neven 1 == false\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Int","name":"even","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":23,"line":161},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":161}}}]],[":=",[{"comments":"Creates a `Tuple String Json` entry, representing a key/value pair for\nan object.\n","hashAnchor":"v","info":{"tag":"valueAlias"},"moduleName":"Data.Argonaut.Encode.Combinators","name":"(:=)","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":20,"line":20},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Combinators.purs","start":{"column":1,"line":20}}}]],[":=?",[{"comments":"Creates an optional `Tuple String Json` entry, representing an optional\nkey/value pair for an object.\n","hashAnchor":"v","info":{"tag":"valueAlias"},"moduleName":"Data.Argonaut.Encode.Combinators","name":"(:=?)","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":29,"line":28},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Combinators.purs","start":{"column":1,"line":28}}}]]]