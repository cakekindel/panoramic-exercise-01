// This file was generated by docs-search.
window.DocsSearchIndex["11"] = [["radix",[{"comments":"The number of unique digits (including zero) used to represent integers in\na specific base.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[]}},"moduleName":"Data.Int","name":"Radix","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":26,"line":175},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":175}}},{"comments":"Create a `Radix` from a number between 2 and 36.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Radix"]}]}]}},"moduleName":"Data.Int","name":"radix","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":28,"line":198},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":198}}}]],["range",[{"comments":"Create an `Unfoldable1` containing a range of values, including both\nendpoints.\n\n``` purescript\nrange 0 0 == (NEL.singleton 0 :: NEL.NonEmptyList Int)\nrange 1 2 == (NEL.cons 1 (NEL.singleton 2) :: NEL.NonEmptyList Int)\nrange 2 0 == (NEL.cons 2 (NEL.cons 1 (NEL.singleton 0)) :: NEL.NonEmptyList Int)\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}]}]},"skolem":null}}},"moduleName":"Data.Unfoldable1","name":"range","packageInfo":{"tag":"package","value":"unfoldable-6.0.0"},"score":0,"sourceSpan":{"end":{"column":56,"line":108},"name":".spago/p/unfoldable-6.0.0/src/Data/Unfoldable1.purs","start":{"column":1,"line":108}}},{"comments":"Create a list containing a range of integers, including both endpoints.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}]}},"moduleName":"Data.List.Lazy","name":"range","packageInfo":{"tag":"package","value":"lists-7.0.0"},"score":0,"sourceSpan":{"end":{"column":32,"line":148},"name":".spago/p/lists-7.0.0/src/Data/List/Lazy.purs","start":{"column":1,"line":148}}},{"comments":"Create a list containing a range of integers, including both endpoints.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}]}},"moduleName":"Data.List","name":"range","packageInfo":{"tag":"package","value":"lists-7.0.0"},"score":0,"sourceSpan":{"end":{"column":32,"line":144},"name":".spago/p/lists-7.0.0/src/Data/List.purs","start":{"column":1,"line":144}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}]}},"moduleName":"Data.Array.NonEmpty","name":"range","packageInfo":{"tag":"package","value":"arrays-7.3.0"},"score":0,"sourceSpan":{"end":{"column":41,"line":201},"name":".spago/p/arrays-7.3.0/src/Data/Array/NonEmpty.purs","start":{"column":1,"line":201}}},{"comments":"Create an array containing a range of integers, including both endpoints.\n```purescript\nrange 2 5 = [2, 3, 4, 5]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}]}},"moduleName":"Data.Array","name":"range","packageInfo":{"tag":"package","value":"arrays-7.3.0"},"score":0,"sourceSpan":{"end":{"column":33,"line":192},"name":".spago/p/arrays-7.3.0/src/Data/Array.purs","start":{"column":1,"line":192}}}]],["odd",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Parity"]}}},"moduleName":"Data.Int","name":"Odd","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":25,"line":112},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":20,"line":112}}},{"comments":"The negation of `even`.\n\n``` purescript\nodd 0 == false\nodd 1 == true\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Int","name":"odd","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":22,"line":170},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":170}}}]],["negate",[{"comments":"`negate x` can be used as a shorthand for `zero - x`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ring"],"Ring"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}}},"moduleName":"Data.Ring","name":"negate","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":37,"line":51},"name":".spago/p/prelude-6.0.1/src/Data/Ring.purs","start":{"column":1,"line":51}}}]],["nelcons",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}}},"moduleName":"Data.List.Types","name":"nelCons","packageInfo":{"tag":"package","value":"lists-7.0.0"},"score":0,"sourceSpan":{"end":{"column":59,"line":194},"name":".spago/p/lists-7.0.0/src/Data/List/Types.purs","start":{"column":1,"line":194}}}]],["neqapproximate",[{"comments":"The complement of `eqApproximate`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Data.Number.Approximate","name":"neqApproximate","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":46,"line":73},"name":".spago/p/numbers-9.0.1/src/Data/Number/Approximate.purs","start":{"column":1,"line":73}}}]],["nes",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Symbol"]},"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"s"}],"constraintClass":[["Data","String","NonEmpty","Internal"],"MakeNonEmpty"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},"skolem":null}},"typeClass":[["Data","String","NonEmpty","Internal"],"MakeNonEmpty"],"typeClassArguments":[{"kind":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Symbol"]},"name":"s"}]}},"moduleName":"Data.String.NonEmpty.Internal","name":"nes","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":35,"line":45},"name":".spago/p/strings-6.0.1/src/Data/String/NonEmpty/Internal.purs","start":{"column":3,"line":45}}}]],["new",[{"comments":"Create a new, empty mutable object\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Foreign","Object","ST"],"STObject"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},"skolem":null}},"skolem":null}}},"moduleName":"Foreign.Object.ST","name":"new","packageInfo":{"tag":"package","value":"foreign-object-4.1.0"},"score":0,"sourceSpan":{"end":{"column":54,"line":30},"name":".spago/p/foreign-object-4.1.0/src/Foreign/Object/ST.purs","start":{"column":1,"line":30}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]}}]}]},"skolem":null}}},"moduleName":"Effect.Ref","name":"new","packageInfo":{"tag":"package","value":"refs-6.0.0"},"score":0,"sourceSpan":{"end":{"column":37,"line":46},"name":".spago/p/refs-6.0.0/src/Effect/Ref.purs","start":{"column":1,"line":46}}},{"comments":"Create a new, empty mutable array.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"h","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Array.ST","name":"new","packageInfo":{"tag":"package","value":"arrays-7.3.0"},"score":0,"sourceSpan":{"end":{"column":53,"line":88},"name":".spago/p/arrays-7.3.0/src/Data/Array/ST.purs","start":{"column":1,"line":88}}},{"comments":"Create a new mutable reference.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","ST","Internal"],"STRef"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.ST.Internal","name":"new","packageInfo":{"tag":"package","value":"st-6.2.0"},"score":0,"sourceSpan":{"end":{"column":56,"line":117},"name":".spago/p/st-6.2.0/src/Control/Monad/ST/Internal.purs","start":{"column":1,"line":117}}}]],["newtype",[{"comments":"A type class for `newtype`s to enable convenient wrapping and unwrapping,\nand the use of the other functions in this module.\n\nThe compiler can derive instances of `Newtype` automatically:\n\n``` purescript\nnewtype EmailAddress = EmailAddress String\n\nderive instance newtypeEmailAddress :: Newtype EmailAddress _\n```\n\nNote that deriving for `Newtype` instances requires that the type be\ndefined as `newtype` rather than `data` declaration (even if the `data`\nstructurally fits the rules of a `newtype`), and the use of a wildcard for\nthe wrapped type.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"t"},{"name":"a"}],"fundeps":[[["t"],["a"]]],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Newtype","name":"Newtype","packageInfo":{"tag":"package","value":"newtype-5.0.0"},"score":0,"sourceSpan":{"end":{"column":44,"line":29},"name":".spago/p/newtype-5.0.0/src/Data/Newtype.purs","start":{"column":1,"line":29}}}]],["newwithself",[{"comments":"Create a new mutable reference containing a value that can refer to the\n`Ref` being created.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]}}]}]},"skolem":null}}},"moduleName":"Effect.Ref","name":"newWithSelf","packageInfo":{"tag":"package","value":"refs-6.0.0"},"score":0,"sourceSpan":{"end":{"column":71,"line":51},"name":".spago/p/refs-6.0.0/src/Effect/Ref.purs","start":{"column":1,"line":51}}}]],["next",[{"comments":"Get the next item out of an iterator, advancing it. Returns Nothing if the\nIterator is exhausted.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","ST","Iterator"],"Iterator"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Array.ST.Iterator","name":"next","packageInfo":{"tag":"package","value":"arrays-7.3.0"},"score":0,"sourceSpan":{"end":{"column":51,"line":48},"name":".spago/p/arrays-7.3.0/src/Data/Array/ST/Iterator.purs","start":{"column":1,"line":48}}}]],["global",[{"comments":"Only global flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"global","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":21,"line":35},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":35}}},{"comments":"This region allows `ST` computations to be converted into `Effect`\ncomputations so they can be run in a global context.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[]}},"moduleName":"Control.Monad.ST.Global","name":"Global","packageInfo":{"tag":"package","value":"st-6.2.0"},"score":0,"sourceSpan":{"end":{"column":37,"line":14},"name":".spago/p/st-6.2.0/src/Control/Monad/ST/Global.purs","start":{"column":1,"line":14}}}]],["encodearray",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeArray","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":56,"line":83},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":83}}}]],["encodeboolean",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeBoolean","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":33,"line":50},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":50}}}]],["encodechar",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeChar","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":27,"line":80},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":80}}}]],["encodecodepoint",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeCodePoint","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":37,"line":62},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":62}}}]],["encodeeither",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeEither","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":77,"line":38},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":38}}}]],["encodeforeignobject",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeForeignObject","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":68,"line":89},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":89}}}]],["encodeidentity",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeIdentity","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":62,"line":27},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":27}}}]],["encodeint",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeInt","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":25,"line":56},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":56}}}]],["encodejson",[{"hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"a"}],"fundeps":[],"superclasses":[]}},"moduleName":"Data.Argonaut.Encode.Class","name":"EncodeJson","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":26,"line":27},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Class.purs","start":{"column":1,"line":26}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}},"typeClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"typeClassArguments":[{"name":"a"}]}},"moduleName":"Data.Argonaut.Encode.Class","name":"encodeJson","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":26,"line":27},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Class.purs","start":{"column":3,"line":27}}}]],["encodelist",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeList","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":54,"line":86},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":86}}}]],["encodemap",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeMap","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":82,"line":95},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":95}}}]],["encodemaybe",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeMaybe","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":56,"line":30},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":30}}}]],["encodenonempty_array",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNonEmpty_Array","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":74,"line":68},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":68}}}]],["encodenonempty_list",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNonEmpty_List","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":72,"line":74},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":74}}}]],["encodenonemptyarray",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNonEmptyArray","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":72,"line":71},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":71}}}]],["encodenonemptylist",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNonEmptyList","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":70,"line":77},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":77}}}]],["encodenonemptystring",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNonEmptyString","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":47,"line":65},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":65}}}]],["encodenumber",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeNumber","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":31,"line":53},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":53}}}]],["encodeset",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeSet","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":63,"line":92},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":92}}}]],["encodestring",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeString","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":31,"line":59},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":59}}}]],["encodetuple",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeTuple","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":75,"line":35},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":35}}}]],["encodeunit",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeUnit","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":27,"line":47},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":47}}}]],["encodevoid",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Encode.Encoders","name":"encodeVoid","packageInfo":{"tag":"package","value":"argonaut-codecs-9.1.0"},"score":0,"sourceSpan":{"end":{"column":27,"line":100},"name":".spago/p/argonaut-codecs-9.1.0/src/Data/Argonaut/Encode/Encoders.purs","start":{"column":1,"line":100}}}]],["endo",[{"comments":"Monoid and semigroup for category endomorphisms.\n\nWhen `c` is instantiated with `->` this composes functions of type\n`a -> a`:\n\n``` purescript\nEndo f <> Endo g == Endo (f <<< g)\n(mempty :: Endo _) == Endo identity\n```\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"c"},{"name":"a"}]}},"moduleName":"Data.Monoid.Endo","name":"Endo","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":32,"line":15},"name":".spago/p/prelude-6.0.1/src/Data/Monoid/Endo.purs","start":{"column":1,"line":15}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"c"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Monoid.Endo","name":"Endo","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":32,"line":15},"name":".spago/p/prelude-6.0.1/src/Data/Monoid/Endo.purs","start":{"column":18,"line":15}}}]],["enum",[{"comments":"Type class for enumerations.\n\nLaws:\n- Successor: `all (a < _) (succ a)`\n- Predecessor: `all (_ < a) (pred a)`\n- Succ retracts pred: `pred >=> succ >=> pred = pred`\n- Pred retracts succ: `succ >=> pred >=> succ = succ`\n- Non-skipping succ: `b <= a || any (_ <= b) (succ a)`\n- Non-skipping pred: `a <= b || any (b <= _) (pred a)`\n\nThe retraction laws can intuitively be understood as saying that `succ` is\nthe opposite of `pred`; if you apply `succ` and then `pred` to something,\nyou should end up with what you started with (although of course this\ndoesn't apply if you tried to `succ` the last value in an enumeration and\ntherefore got `Nothing` out).\n\nThe non-skipping laws can intuitively be understood as saying that `succ`\nshouldn't skip over any elements of your type. For example, _without_ the\nnon-skipping laws, it would be permissible to write an `Enum Int` instance\nwhere `succ x = Just (x+2)`, and similarly `pred x = Just (x-2)`.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"a"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Enum","name":"Enum","packageInfo":{"tag":"package","value":"enums-6.0.1"},"score":0,"sourceSpan":{"end":{"column":23,"line":52},"name":".spago/p/enums-6.0.1/src/Data/Enum.purs","start":{"column":1,"line":50}}}]],["enumfromthento",[{"comments":"Returns a sequence of elements from the first value, taking steps\naccording to the difference between the first and second value, up to\n(but not exceeding) the third value.\n\n``` purescript\nenumFromThenTo 0 2 6 = [0, 2, 4, 6]\nenumFromThenTo 0 3 5 = [0, 3]\n```\n\nNote that there is no `BoundedEnum` instance for integers, they're just\nbeing used here for illustrative purposes to help clarify the behaviour.\n\nThe example shows `Array` return values, but the result can be any type\nwith an `Unfoldable1` instance.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Functor"],"Functor"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Enum","name":"enumFromThenTo","packageInfo":{"tag":"package","value":"enums-6.0.1"},"score":0,"sourceSpan":{"end":{"column":95,"line":208},"name":".spago/p/enums-6.0.1/src/Data/Enum.purs","start":{"column":1,"line":208}}}]],["enumfromto",[{"comments":"Returns a contiguous sequence of elements from the first value to the\nsecond value (inclusive).\n\n``` purescript\nenumFromTo 0 3 = [0, 1, 2, 3]\nenumFromTo 'c' 'a' = ['c', 'b', 'a']\n```\n\nThe example shows `Array` return values, but the result can be any type\nwith an `Unfoldable1` instance.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"u","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Enum"],"Enum"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"u"}],"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"u"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Enum","name":"enumFromTo","packageInfo":{"tag":"package","value":"enums-6.0.1"},"score":0,"sourceSpan":{"end":{"column":67,"line":185},"name":".spago/p/enums-6.0.1/src/Data/Enum.purs","start":{"column":1,"line":185}}}]],["doc",[{"comments":"`Doc` is the kind of type-level documents.\n\nThis kind is used with the `Fail` and `Warn` type classes.\nBuild up a `Doc` with `Text`, `Quote`, `QuoteLabel`, `Beside`, and `Above`.\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}},"moduleName":"Prim.TypeError","name":"Doc","packageInfo":{"tag":"builtin"},"score":0}]],["done",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Rec","Class"],"Step"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}},"moduleName":"Control.Monad.Rec.Class","name":"Done","packageInfo":{"tag":"package","value":"tailrec-6.1.0"},"score":0,"sourceSpan":{"end":{"column":30,"line":29},"name":".spago/p/tailrec-6.1.0/src/Control/Monad/Rec/Class.purs","start":{"column":24,"line":29}}}]],["dotall",[{"comments":"Only dotAll flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"dotAll","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":21,"line":90},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":90}}}]],["down",[{"comments":"A newtype wrapper which provides a reversed `Ord` instance. For example:\n\n    sortBy (comparing Down) [1,2,3] = [3,2,1]\n\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"a"}]}},"moduleName":"Data.Ord.Down","name":"Down","packageInfo":{"tag":"package","value":"orders-6.0.0"},"score":0,"sourceSpan":{"end":{"column":24,"line":12},"name":".spago/p/orders-6.0.0/src/Data/Ord/Down.purs","start":{"column":1,"line":12}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ord","Down"],"Down"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Ord.Down","name":"Down","packageInfo":{"tag":"package","value":"orders-6.0.0"},"score":0,"sourceSpan":{"end":{"column":24,"line":12},"name":".spago/p/orders-6.0.0/src/Data/Ord/Down.purs","start":{"column":16,"line":12}}}]],["downfrom",[{"comments":"Produces all predecessors of an `Enum` value, excluding the start value.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"u","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Enum"],"Enum"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"u"}],"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"u"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Enum","name":"downFrom","packageInfo":{"tag":"package","value":"enums-6.0.1"},"score":0,"sourceSpan":{"end":{"column":59,"line":232},"name":".spago/p/enums-6.0.1/src/Data/Enum.purs","start":{"column":1,"line":232}}}]],["downfromincluding",[{"comments":"Produces all predecessors of an `Enum` value, including the start value.\n\n`downFromIncluding top` will return all values in an `Enum`, in reverse\norder.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"u","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Enum"],"Enum"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"u"}],"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"u"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Enum","name":"downFromIncluding","packageInfo":{"tag":"package","value":"enums-6.0.1"},"score":0,"sourceSpan":{"end":{"column":69,"line":239},"name":".spago/p/enums-6.0.1/src/Data/Enum.purs","start":{"column":1,"line":239}}}]],["argument",[{"comments":"A representation for an argument in a data constructor.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"a"}]}},"moduleName":"Data.Generic.Rep","name":"Argument","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":32,"line":50},"name":".spago/p/prelude-6.0.1/src/Data/Generic/Rep.purs","start":{"column":1,"line":50}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Generic","Rep"],"Argument"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Generic.Rep","name":"Argument","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":32,"line":50},"name":".spago/p/prelude-6.0.1/src/Data/Generic/Rep.purs","start":{"column":20,"line":50}}}]],["arr",[{"comments":"Lift a pure function into any `Profunctor` which is also a `Category`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Control","Category"],"Category"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Profunctor","name":"arr","packageInfo":{"tag":"package","value":"profunctor-6.0.1"},"score":0,"sourceSpan":{"end":{"column":69,"line":34},"name":".spago/p/profunctor-6.0.1/src/Data/Profunctor.purs","start":{"column":1,"line":34}}}]],["array",[{"comments":"An Array: a data structure supporting efficient random access. In\nthe JavaScript backend, values of this type are represented as JavaScript\nArrays at runtime.\n\nConstruct values using literals:\n\n    x = [1,2,3,4,5] :: Array Int\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]}},"moduleName":"Prim","name":"Array","packageInfo":{"tag":"builtin"},"score":0}]]]