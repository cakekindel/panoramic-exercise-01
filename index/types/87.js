// This file was generated by docs-search
window.DocsSearchTypeIndex["87"] = {"tag":"Just","value":[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[],"type":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}}},"moduleName":"Control.Monad.Gen.Class","name":"Size","packageInfo":{"tag":"package","value":"gen-4.0.0"},"score":0,"sourceSpan":{"end":{"column":16,"line":29},"name":".spago/p/gen-4.0.0/src/Control/Monad/Gen/Class.purs","start":{"column":1,"line":29}}},{"comments":"An empty object represented as `Json`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}},"moduleName":"Data.Argonaut.Core","name":"jsonEmptyObject","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":24,"line":228},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":228}}},{"comments":"An empty array represented as `Json`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}},"moduleName":"Data.Argonaut.Core","name":"jsonEmptyArray","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":23,"line":224},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":224}}},{"comments":"An empty string represented as `Json`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}},"moduleName":"Data.Argonaut.Core","name":"jsonEmptyString","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":24,"line":220},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":220}}},{"comments":"The number zero represented as `Json`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}},"moduleName":"Data.Argonaut.Core","name":"jsonZero","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":17,"line":216},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":216}}},{"comments":"The false boolean value represented as `Json`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}},"moduleName":"Data.Argonaut.Core","name":"jsonFalse","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":18,"line":212},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":212}}},{"comments":"The true boolean value represented as `Json`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}},"moduleName":"Data.Argonaut.Core","name":"jsonTrue","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":17,"line":208},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":208}}},{"comments":"The JSON null value represented as `Json`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}},"moduleName":"Data.Argonaut.Core","name":"jsonNull","packageInfo":{"tag":"package","value":"argonaut-core-7.0.0"},"score":0,"sourceSpan":{"end":{"column":32,"line":205},"name":".spago/p/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":{"column":1,"line":205}}},{"comments":"An alias for `true`, which can be useful in guard clauses:\n\n```purescript\nmax x y | x >= y    = x\n        | otherwise = y\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}},"moduleName":"Data.Boolean","name":"otherwise","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":21,"line":9},"name":".spago/p/prelude-6.0.1/src/Data/Boolean.purs","start":{"column":1,"line":9}}},{"comments":"The base-36 system.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Radix"]}},"moduleName":"Data.Int","name":"base36","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":16,"line":194},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":194}}},{"comments":"The base-16 system.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Radix"]}},"moduleName":"Data.Int","name":"hexadecimal","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":21,"line":190},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":190}}},{"comments":"The base-10 system.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Radix"]}},"moduleName":"Data.Int","name":"decimal","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":17,"line":186},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":186}}},{"comments":"The base-8 system.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Radix"]}},"moduleName":"Data.Int","name":"octal","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":15,"line":182},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":182}}},{"comments":"The base-2 system.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Radix"]}},"moduleName":"Data.Int","name":"binary","packageInfo":{"tag":"package","value":"integers-6.0.0"},"score":0,"sourceSpan":{"end":{"column":16,"line":178},"name":".spago/p/integers-6.0.0/src/Data/Int.purs","start":{"column":1,"line":178}}},{"comments":"The ratio of the circumference of a circle to its radius.\n```purs\n> 2.0 * pi == tau\ntrue\n\n> tau\n6.283185307179586\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"tau","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":14,"line":362},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":362}}},{"comments":"The square root of two.\n```purs\n> sqrt 2.0 == sqrt2\ntrue\n\n> sqrt2\n1.4142135623730951\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"sqrt2","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":16,"line":351},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":351}}},{"comments":"The square root of one half.\n```purs\n> sqrt 0.5 == sqrt1_2\ntrue\n\n> sqrt1_2\n0.7071067811865476\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"sqrt1_2","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":18,"line":340},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":340}}},{"comments":"The ratio of the circumference of a circle to its diameter.\n```purs\n> pi\n3.141592653589793\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"pi","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":13,"line":329},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":329}}},{"comments":"The base 2 logarithm of `e`.\n```purs\n> 1.0 / ln2 == log2e\ntrue\n\n> log2e\n1.4426950408889634\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"log2e","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":16,"line":321},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":321}}},{"comments":"Base 10 logarithm of `e`.\n```purs\n> 1.0 / ln10 - log10e\n-5.551115123125783e-17\n\n> log10e\n0.4342944819032518\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"log10e","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":17,"line":310},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":310}}},{"comments":"The natural logarithm of 10.\n```purs\n> log 10.0 == ln10\ntrue\n\n> ln10\n2.302585092994046\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"ln10","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":15,"line":299},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":299}}},{"comments":"The natural logarithm of 2.\n```purs\n> log 2.0 == ln2\ntrue\n\n> ln2\n0.6931471805599453\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"ln2","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":14,"line":288},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":288}}},{"comments":"The base of the natural logarithm, also known as Euler's number or *e*.\n```purs\n> log e\n1.0\n\n> exp 1.0 == e\ntrue\n\n> e\n2.718281828459045\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"e","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":12,"line":277},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":277}}},{"comments":"Positive infinity. For negative infinity use `(-infinity)`\n```purs\n> infinity\nInfinity\n\n> (-infinity)\n- Infinity\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"infinity","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":34,"line":67},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":67}}},{"comments":"Not a number (NaN).\n```purs\n> nan\nNaN\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"nan","packageInfo":{"tag":"package","value":"numbers-9.0.1"},"score":0,"sourceSpan":{"end":{"column":29,"line":47},"name":".spago/p/numbers-9.0.1/src/Data/Number.purs","start":{"column":1,"line":47}}},{"comments":"Only dotAll flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"dotAll","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":21,"line":90},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":90}}},{"comments":"Only unicode flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"unicode","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":22,"line":79},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":79}}},{"comments":"Only sticky flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"sticky","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":21,"line":68},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":68}}},{"comments":"Only multiline flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"multiline","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":24,"line":57},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":57}}},{"comments":"Only ignoreCase flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"ignoreCase","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":25,"line":46},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":46}}},{"comments":"Only global flag set to true\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"global","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":21,"line":35},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":35}}},{"comments":"All flags set to false.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex","Flags"],"RegexFlags"]}},"moduleName":"Data.String.Regex.Flags","name":"noFlags","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":22,"line":24},"name":".spago/p/strings-6.0.1/src/Data/String/Regex/Flags.purs","start":{"column":1,"line":24}}},{"comments":"`unit` is the sole inhabitant of the `Unit` type.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}},"moduleName":"Data.Unit","name":"unit","packageInfo":{"tag":"package","value":"prelude-6.0.1"},"score":0,"sourceSpan":{"end":{"column":28,"line":14},"name":".spago/p/prelude-6.0.1/src/Data/Unit.purs","start":{"column":1,"line":14}}}]}