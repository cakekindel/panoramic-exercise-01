// This file was generated by docs-search
window.DocsSearchTypeIndex["1980087980"] = {"tag":"Just","value":[{"comments":"Splits a string into two substrings, where `before` contains the code\npoints up to (but not including) the given index, and `after` contains the\nrest of the string, from that index on.\n\n```purescript\n>>> splitAt 3 \"b ùêÄùêÄ c ùêÄ\"\n{ before: \"b ùêÄ\", after: \"ùêÄ c ùêÄ\" }\n```\n\nThus the length of `(splitAt i s).before` will equal either `i` or\n`length s`, if that is shorter. (Or if `i` is negative the length will be\n0.)\n\nIn code:\n```purescript\nlength (splitAt i s).before == min (max i 0) (length s)\n(splitAt i s).before <> (splitAt i s).after == s\nsplitAt i s == {before: take i s, after: drop i s}\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000b\u0000e\u0000f\u0000o\u0000r\u0000e",{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]},{"tag":"RCons","annotation":null,"contents":["\u0000a\u0000f\u0000t\u0000e\u0000r",{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]},{"tag":"REmpty","annotation":null}]}]}]}]}]}},"moduleName":"Data.String.CodePoints","name":"splitAt","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":66,"line":397},"name":".spago/p/strings-6.0.1/src/Data/String/CodePoints.purs","start":{"column":1,"line":397}}},{"comments":"Splits a string into two substrings, where `before` contains the\ncharacters up to (but not including) the given index, and `after` contains\nthe rest of the string, from that index on.\n\n```purescript\nsplitAt 2 \"Hello World\" == { before: \"He\", after: \"llo World\"}\nsplitAt 10 \"Hi\" == { before: \"Hi\", after: \"\"}\n```\n\nThus the length of `(splitAt i s).before` will equal either `i` or\n`length s`, if that is shorter. (Or if `i` is negative the length will be\n0.)\n\nIn code:\n```purescript\nlength (splitAt i s).before == min (max i 0) (length s)\n(splitAt i s).before <> (splitAt i s).after == s\nsplitAt i s == {before: take i s, after: drop i s}\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000b\u0000e\u0000f\u0000o\u0000r\u0000e",{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]},{"tag":"RCons","annotation":null,"contents":["\u0000a\u0000f\u0000t\u0000e\u0000r",{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]},{"tag":"REmpty","annotation":null}]}]}]}]}]}},"moduleName":"Data.String.CodeUnits","name":"splitAt","packageInfo":{"tag":"package","value":"strings-6.0.1"},"score":0,"sourceSpan":{"end":{"column":81,"line":332},"name":".spago/p/strings-6.0.1/src/Data/String/CodeUnits.purs","start":{"column":1,"line":332}}}]}